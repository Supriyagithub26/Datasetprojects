# -*- coding: utf-8 -*-
"""Simpleirisdatasetproject

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o2N5U5GKgkz8fO0sEpmx8X0hOdjLb3wE
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.datasets import load_iris

# Load the Iris dataset
iris = load_iris()
data = pd.DataFrame(data= np.c_[iris['data'], iris['target']], columns= iris['feature_names'] + ['target'])

# Display basic information about the dataset
print(data.info())
print(data.head())

# Pairplot for feature visualization
sns.pairplot(data, hue='target', palette='Set1')
plt.show()

# Check for missing values
print(data.isnull().sum())

# Outlier detection and handling if necessary
# Encoding categorical variables if needed

from sklearn.model_selection import train_test_split

X = data.drop('target', axis=1)
y = data['target']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.tree import DecisionTreeClassifier

# Create a Decision Tree model
model = DecisionTreeClassifier(random_state=42)

# Train the model
model.fit(X_train, y_train)

from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
print(f'Accuracy: {accuracy_score(y_test, y_pred)}')
print(f'Classification Report:\n{classification_report(y_test, y_pred)}')
print(f'Confusion Matrix:\n{confusion_matrix(y_test, y_pred)}')

